
function getNumTurns()
    local numTurns = 0
    for k, player_score in pairs(score_history) do
        if #player_score > numTurns then numTurns = #player_score end
    end
    return numTurns
end
players_who_hid_ui_set = {}
function show_ui_clicked(player)
    players_who_hid_ui_set[player.color] = false
    update_ui_visibility()
end
function hide_ui_clicked(player)
    players_who_hid_ui_set[player.color] = true
    update_ui_visibility()

end
function update_ui_visibility()
    local players_viewing_ui = {}
    local players_who_hid_ui = {}
    for i,v in ipairs(Player.getPlayers()) do
        if players_who_hid_ui_set[v.color] then table.insert(players_who_hid_ui,v.color) else table.insert(players_viewing_ui,v.color) end
    end
    if #players_viewing_ui > 0 then
        UI.setAttribute('ui_panel','visibility',table.concat(players_viewing_ui,'|'))
    else
        UI.setAttribute('ui_panel','active',false)
    end
    if #players_who_hid_ui > 0 then
        UI.setAttribute('ui_show_ui','active',true)
        UI.setAttribute('ui_show_ui','visibility',table.concat(players_who_hid_ui,'|'))
    else
        UI.setAttribute('ui_show_ui','active',false)
    end
end
function updateScoreUI()
    local playerList = Player.getPlayers()
    local numTurns = getNumTurns()

    local score_xml = [[
    <Panel id="ui_panel" height="]].. tostring(math.max(60*#playerList,250)) ..[[" width="]].. tostring(600 + math.max(numTurns-4,0)*60).. [[" rectAlignment="LowerRight"  padding="5 5 20 5" color="#cfccdeaa">
    <TableLayout>
    <Row preferredHeight="44">
    <Text fontSize="24" >Score</Text>
    </Row>
    <Row>
    <Cell dontUseTableCellBackground="true" >
    </Cell>
    <Cell dontUseTableCellBackground="true" >
    </Cell>
    ]]
    local footer = [[<Row preferredHeight="50">]]..
    string.rep("<Cell dontUseTableCellBackground=\"true\"></Cell>",numTurns+2)..
    [[
    <Cell dontUseTableCellBackground="true">
    <Button id="ui_reset_score" onClick="try_reset">Reset Scores</Button>
    </Cell></Row></TableLayout>

    </Panel>
    ]]
    for i=1,numTurns do
        score_xml = score_xml .. "<Cell><Text>Round " .. tostring(i) .. "</Text></Cell>"
    end
    score_xml = score_xml .. "<Cell><Text fontStyle=\"Bold\" >Total</Text></Cell></Row>"
    for i, playerReference in ipairs(playerList) do
        if score_history[playerReference.color] ~= nil then
            score_xml = score_xml .. "<Row><Cell columnSpan=\"2\"><Text  fontSize=\"20\" color=\""..playerReference.color.."\">" .. playerReference.steam_name .. "</Text></Cell>"
                        
            for i=1,numTurns do
                score_xml = score_xml .. "<Cell><Text>" .. tostring(score_history[playerReference.color][i]) .. "</Text></Cell>"
            end
            score_xml = score_xml .. "<Cell><Text fontStyle=\"Bold\">" .. tostring(sumList(score_history[playerReference.color])) .. "</Text></Cell></Row>"
        end
    end

    score_xml = score_xml .. footer
    UI.setXml(score_xml)
    -- update_ui_visibility()
end

function try_reset()
    UI.setAttribute('ui_reset_score','text',"Click again to reset")
    UI.setAttribute('ui_reset_score','onClick','reset_scores')
end
